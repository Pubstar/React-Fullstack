{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\React-Fullstack\\\\React-Fullstack\\\\Client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Routes } from 'react-router-dom';\n\n//components\nimport Navbar from './components/navbar/navbar';\nimport Homepage from './components/homepage/homepage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  let username;\n  let note;\n  const [serverData, setServerData] = useState();\n  function fetchUsers() {\n    fetch(\"/api/getUsers\").then(response => response.json().then(data => setServerData(data)));\n  }\n  function createUser(event) {\n    event.preventDefault();\n    fetch(\"/api/createUser\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: username,\n        note: note\n      })\n    });\n    event.target.username.value = \"\";\n    event.target.note.value = \"\";\n    fetchUsers();\n  }\n  function setUsername(event) {\n    username = event.target.value;\n  }\n  function setNote(event) {\n    note = event.target.value;\n  }\n\n  // Main page\n  // TODO make something relevant instead of fake users\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(Homepage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"EtiMo/wfZ4Z5zC0ap/43jLLGkUI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Routes","Navbar","Homepage","App","username","note","serverData","setServerData","fetchUsers","fetch","then","response","json","data","createUser","event","preventDefault","method","headers","body","JSON","stringify","name","target","value","setUsername","setNote"],"sources":["D:/GitHub/React-Fullstack/React-Fullstack/Client/src/App.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport './App.css';\r\nimport { Routes } from 'react-router-dom';\r\n\r\n//components\r\nimport Navbar from './components/navbar/navbar';\r\nimport Homepage from './components/homepage/homepage';\r\n\r\nconst App = () => {\r\n\r\n  let username;\r\n  let note;\r\n\r\n  const [serverData, setServerData] = useState();\r\n\r\n  function fetchUsers() {\r\n    fetch(\"/api/getUsers\")\r\n      .then(response => response.json()\r\n        .then(data => setServerData(data)));\r\n  }\r\n\r\n  function createUser(event) {\r\n    event.preventDefault();\r\n    fetch(\"/api/createUser\", {\r\n      method: \"POST\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ name: username, note: note })\r\n    })\r\n    event.target.username.value = \"\";\r\n    event.target.note.value = \"\";\r\n    fetchUsers();\r\n  }\r\n\r\n  function setUsername(event) {\r\n    username = event.target.value;\r\n  }\r\n\r\n  function setNote(event) {\r\n    note = event.target.value;\r\n  }\r\n\r\n  // Main page\r\n  // TODO make something relevant instead of fake users\r\n  return (\r\n    <Routes>\r\n      <Navbar />\r\n      <Route path=\"/\" element={<Homepage />} />\r\n    </Routes>\r\n  )\r\n}\r\n\r\nexport default App"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,SAASC,MAAM,QAAQ,kBAAkB;;AAEzC;AACA,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,QAAQ,MAAM,gCAAgC;AAAC;AAEtD,MAAMC,GAAG,GAAG,MAAM;EAAA;EAEhB,IAAIC,QAAQ;EACZ,IAAIC,IAAI;EAER,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,EAAE;EAE9C,SAASS,UAAU,GAAG;IACpBC,KAAK,CAAC,eAAe,CAAC,CACnBC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAC9BF,IAAI,CAACG,IAAI,IAAIN,aAAa,CAACM,IAAI,CAAC,CAAC,CAAC;EACzC;EAEA,SAASC,UAAU,CAACC,KAAK,EAAE;IACzBA,KAAK,CAACC,cAAc,EAAE;IACtBP,KAAK,CAAC,iBAAiB,EAAE;MACvBQ,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,IAAI,EAAElB,QAAQ;QAAEC,IAAI,EAAEA;MAAK,CAAC;IACrD,CAAC,CAAC;IACFU,KAAK,CAACQ,MAAM,CAACnB,QAAQ,CAACoB,KAAK,GAAG,EAAE;IAChCT,KAAK,CAACQ,MAAM,CAAClB,IAAI,CAACmB,KAAK,GAAG,EAAE;IAC5BhB,UAAU,EAAE;EACd;EAEA,SAASiB,WAAW,CAACV,KAAK,EAAE;IAC1BX,QAAQ,GAAGW,KAAK,CAACQ,MAAM,CAACC,KAAK;EAC/B;EAEA,SAASE,OAAO,CAACX,KAAK,EAAE;IACtBV,IAAI,GAAGU,KAAK,CAACQ,MAAM,CAACC,KAAK;EAC3B;;EAEA;EACA;EACA,oBACE,QAAC,MAAM;IAAA,wBACL,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eACV,QAAC,KAAK;MAAC,IAAI,EAAC,GAAG;MAAC,OAAO,eAAE,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA;IAAI;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAClC;AAEb,CAAC;AAAA,GAzCKrB,GAAG;AAAA,KAAHA,GAAG;AA2CT,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}